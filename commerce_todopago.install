<?php

/**
 * @file
 * Installs the tables required by Commerce Todo Pago.
 */

/**
 * Implements hook_requirements().
 */
function commerce_todopago_requirements($phase) {
  if ($phase == 'install') {
    if (!extension_loaded('soap')) {
      $requirement_severity = REQUIREMENT_ERROR;
      $description = t('The Todo Pago module requires the PHP SOAP extension be installed on the web server.');
    }
    else {
      $requirement_severity = REQUIREMENT_OK;
      $description= '';
    }

    $requirements = array(
      array(
        'title' => t('Todo Pago'),
        'description' => $description,
        'severity' => $requirement_severity,
      ),
    );
  }
  elseif ($phase == 'runtime') {
    $library = libraries_load('todopago');
    if (empty($library['loaded'])) {
      $requirement_severity = REQUIREMENT_ERROR;
      $description = t('The Todo Pago SDK is missing.');
    }
    else {
      $requirement_severity = REQUIREMENT_OK;
      $description= 'The Todo Pago SDK is installed.';
    }

    $requirements = array(
      array(
        'title' => t('Todo Pago'),
        'value' => '',
        'description' => $description,
        'severity' => $requirement_severity,
      ),
    );
  }

  return $requirements;
}

/**
 * Implements hook_schema().
 */
function commerce_todopago_schema() {
  $schema = array();

  $schema['commerce_todopago_queries'] = array(
    'description' => 'Stores the queries of the status of Todo Pago transactions.',
    'fields' => array(
      'query_id' => array(
        'description' => 'Serial numeric ID of the query in the local database.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'answer_key' => array(
        'description' => 'The Todo Pago\'s answer ID.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'status_code' => array(
        'description' => 'The code for the transaction\'s status.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'status_message' => array(
        'description' => 'The status of the transaction as text.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'authorization_key' => array(
        'description' => 'The authorization key of the transaction.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'datetime' => array(
        'description' => 'Date and time of the transaction.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'result_code' => array(
        'description' => 'The code of the transaction\'s result.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'result_message' => array(
        'description' => 'The result of the transaction as text.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'currency_name' => array(
        'description' => 'The name of the currency of the transaction.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'payment_method_name' => array(
        'description' => 'The name of the payment method.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'ticket_number' => array(
        'description' => 'The number of the ticket of the transaction.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'card_number' => array(
        'description' => 'The number of the card used for payment.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'authorization_code' => array(
        'description' => 'The code of the authorization of the transaction.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'order_id' => array(
        'description' => 'The order ID the payment belongs to.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'transaction_id' => array(
        'description' => 'The payment transaction ID the payment belongs to.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the query was made.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the query was last updated.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('query_id'),
    'foreign keys' => array(
      'order_id' => array(
        'table' => 'commerce_order',
        'columns'=> array('order_id' => 'order_id'),
      ),
      'transaction_id' => array(
        'table' => 'commerce_payment_transaction',
        'columns'=> array('payment_id' => 'payment_id'),
      ),
    ),
    'indexes' => array(
      'answer_key' => array('answer_key'),
    ),
  );

  return $schema;
}

